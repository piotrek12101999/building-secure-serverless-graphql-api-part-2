name: secure-graphql-api
authentication:
  type: AMAZON_COGNITO_USER_POOLS
  config:
    userPoolId: !Ref UserPool
additionalAuthentications:
  - type: "API_KEY"
apiKeys:
  - name: WebClientApiKey
    expiresAfter: 1M
schema: src/api/schema.graphql
resolvers:
  Query.getOrders:
    kind: UNIT
    dataSource: getOrdersDataSource
  Query.getProducts:
    kind: UNIT
    dataSource: getProductsDataSource
  Mutation.createProduct:
    kind: UNIT
    dataSource: createProductDataSource
  Mutation.placeOrder:
    kind: UNIT
    dataSource: placeOrderDataSource
  Mutation.startProcessingOrder:
    kind: UNIT
    dataSource: startProcessingOrderDataSource
  Mutation.completeOrder:
    kind: UNIT
    dataSource: completeOrderDataSource
dataSources:
  getOrdersDataSource:
    type: AWS_LAMBDA
    config:
      functionArn: !GetAtt GetOrdersLambdaFunction.Arn
  getProductsDataSource:
    type: AWS_LAMBDA
    config:
      functionArn: !GetAtt GetProductsLambdaFunction.Arn
  createProductDataSource:
    type: AWS_LAMBDA
    config:
      functionArn: !GetAtt CreateProductLambdaFunction.Arn
  placeOrderDataSource:
    type: AWS_LAMBDA
    config:
      functionArn: !GetAtt PlaceOrderLambdaFunction.Arn
  startProcessingOrderDataSource:
    type: AWS_LAMBDA
    config:
      functionArn: !GetAtt StartProcessingOrderLambdaFunction.Arn
  completeOrderDataSource:
    type: AWS_LAMBDA
    config:
      functionArn: !GetAtt CompleteOrderLambdaFunction.Arn
