schema {
  query: Query
  mutation: Mutation
}

type Query {
    getProducts: [Product!]
    @aws_api_key @aws_cognito_user_pools
    getOrders: [Order!]
}

type Mutation {
    createProduct(input: ProductInput!): Product!
	@aws_cognito_user_pools(cognito_groups: ["Admins"])
    placeOrder(input: OrderInput!): Order!
    startProcessingOrder(id: ID!): Order!
	@aws_cognito_user_pools(cognito_groups: ["Admins"])
    completeOrder(id: ID!): Order!
	@aws_cognito_user_pools(cognito_groups: ["Admins"])
}

type Product @aws_api_key @aws_cognito_user_pools {
    id: ID!
    name: String!
    description: String
    price: String!
    created: AWSTimestamp!
}

enum OrderStatus {
    PENDING,
    PROCESSING,
    COMPLETED
}

type Order {
    id: ID!
    purchaserEmail: AWSEmail!
    status: OrderStatus!
    products: [Product!]
    totalPrice: String!
    created: AWSTimestamp!
}

enum Currency {
    USD,
    GBP
}

input PriceInput {
    currency: Currency!
    amount: Float!
}


input ProductInput {
    name: String!
    description: String!
    price: PriceInput!
}

input OrderInput {
    productsIds: [ID!]!
}
